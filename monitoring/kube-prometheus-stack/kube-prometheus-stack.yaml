---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://prometheus-community.github.io/helm-charts
      chart: kube-prometheus-stack
      version: 15.4.6
      sourceRef:
        kind: HelmRepository
        name: prometheus-community-charts
        namespace: flux-system
      interval: 5m
  timeout: 20m
  values:
     defaultRules:
       rules:
         kubeApiserverAvailability: true
         kubeApiserver: true
    server:
      resources:
        requests:
          memory: 500Mi
          cpu: 25m
        limits:
          memory: 1500Mi
    prometheusOperator:
      createCustomResource: true
      # prometheusConfigReloaderImage:
      #   repository: quay.io/coreos/prometheus-config-reloader
      #   tag: v0.39.0
      # configmapReloadImage:
      #   repository: jimmidyson/configmap-reload
      #   tag: v0.4.0
      configReloaderCpu: 200m
    alertmanager:
      alertmanagerSpec:
        storage:
          volumeClaimTemplate:
            spec:
              selector:
                matchLabels:
                  app.kubernetes.io/name: nfs-monitoring-pvc
              resources:
                requests:
                  storage: 10Gi
        tolerations:
        - key: "arm"
          operator: "Exists"
      ingress:
        enabled: true
        pathType: Prefix
        annotations:
          kubernetes.io/ingress.class: "nginx"
      config:
        global:
          resolve_timeout: 5m
#        route:
#          # group_by: ['alertname', 'job']
#          # group_wait: 30s
#          # group_interval: 5m
#          # repeat_interval: 6h
#          # receiver: 'slack-notifications'
#          # receiver: 'pagerduty'
#          routes:
#            - match:
#                alertname: Watchdog
#              receiver: 'null'
#            - receiver: 'pagerduty'
#              match:
#                severity: critical
#              continue: true
#            - receiver: 'slack-notifications'
#        inhibit_rules:
#        - source_match:
#            severity: 'critical'
#          target_match:
#            severity: 'warning'
#          # Apply inhibition if the alertname is the same.
#          equal: ['alertname', 'namespace']
#        templates: ["*.tmpl"]
#      templateFiles:
#        pagerduty-custom.tmpl: |-
#          {{- define "pagerduty.custom.description" -}}[{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] {{ if ne .CommonAnnotations.summary ""}}{{ .CommonAnnotations.summary }} {{ else if ne .CommonAnnotations.message ""}}{{ .CommonAnnotations.message }} {{ else if ne .CommonAnnotations.description ""}}{{ .CommonAnnotations.description }} {{ else }}{{ .CommonLabels.alertname }}{{ end }}{{- end -}}
    nodeExporter:
      serviceMonitor:
        relabelings:
        - sourceLabels: [__meta_kubernetes_pod_node_name]
          targetLabel: instance
          action: replace
    grafana:
      enabled: false
    kubelet:
      enabled: true
      serviceMonitor:
        metricRelabelings:
          - action: replace
            sourceLabels:
              - node
            targetLabel: instance
    kubeEtcd:
      enabled: false
    kubeControllerManager:
      enabled: false
    kubeScheduler:
      enabled: false
    kubeProxy:
      enabled: false
    prometheus:
      ingress:
        enabled: true
        pathType: Prefix
        annotations:
          kubernetes.io/ingress.class: "nginx"
      prometheusSpec:
        replicas: 1
        replicaExternalLabelName: "replica"
        ruleSelector: {}
        ruleNamespaceSelector: {}
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelector: {}
        serviceMonitorNamespaceSelector: {}
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelector: {}
        podMonitorNamespaceSelector: {}
        podMonitorSelectorNilUsesHelmValues: false
        retention: 6h
        enableAdminAPI: true
        walCompression: true
        storageSpec:
          volumeClaimTemplate:
            spec:
              selector:
                matchLabels:
                  app.kubernetes.io/name: nfs-monitoring-pvc
              resources:
                requests:
                  storage: 10Gi
