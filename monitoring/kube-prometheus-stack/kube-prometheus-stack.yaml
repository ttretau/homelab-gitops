---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  install:
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://prometheus-community.github.io/helm-charts
      chart: kube-prometheus-stack
      version: 72.9.1
      sourceRef:
        kind: HelmRepository
        name: prometheus-community-charts
        namespace: flux-system
      interval: 5m
  values:
    alertmanager:
      config:
        global:
          resolve_timeout: 5m
          slack_api_url: "${SECRET_ALERT_MANAGER_SLACK_WEBHOOK}"
        receivers:
          - name: 'null'
          - name: 'slack-notifications'
            slack_configs:
              - channel: '#homelab'
                icon_url: https://avatars3.githubusercontent.com/u/3380462
                username: 'Alertmanager'
                send_resolved: true
                title: |-
                  [{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] {{ if ne .CommonAnnotations.summary ""}}{{ .CommonAnnotations.summary }} {{ else if ne .CommonAnnotations.message ""}}{{ .CommonAnnotations.message }} {{ else if ne .CommonAnnotations.description ""}}{{ .CommonAnnotations.description }} {{ else }}{{ .CommonLabels.alertname }}{{ end }}
                text: >-
                  {{ range .Alerts -}}
                    *Alert:* {{ .Annotations.title }}{{ if .Labels.severity }} - `{{ .Labels.severity }}`{{ end }}

                  {{ if ne .Annotations.summary ""}}*Summary:* {{ .Annotations.summary }} {{ else if ne .Annotations.message ""}}*Message:* {{ .Annotations.message }} {{ else if ne .Annotations.description ""}}*Description:* {{ .Annotations.description }}{{ end }}

                  *Details:*
                    {{ range .Labels.SortedPairs }} â€¢ *{{ .Name }}:* `{{ .Value }}`
                    {{ end }}
                  {{ end }}
        route:
          group_by: ['alertname', 'job']
          group_wait: 30s
          group_interval: 5m
          repeat_interval: 6h
          receiver: 'null'
          routes:
            - receiver: 'null'
              match:
                alertname: Watchdog
        inhibit_rules:
          - source_match:
              severity: 'critical'
            target_match:
              severity: 'warning'
            equal: ['alertname', 'namespace']
      ingress:
        enabled: false
        pathType: Prefix
        hosts:
        - alertmanager-operated.homelab
        annotations:
          kubernetes.io/ingress.class: "nginx"
      alertmanagerSpec:
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: nfs-client
              resources:
                requests:
                  storage: 1Gi
    nodeExporter:
      serviceMonitor:
        relabelings:
          - action: replace
            regex: (.*)
            replacement: $1
            sourceLabels:
              - __meta_kubernetes_pod_node_name
            targetLabel: kubernetes_node
    grafana:
      enabled: true
      service:
        type: LoadBalancer
        loadBalancerIP: 192.168.128.169
      admin:
        existingSecret: "monitoring-secrets"
        userKey: "SECRET_GRAFANA_USER"
        passwordKey: "SECRET_GRAFANA_PASSWORD"
      env:
        GF_EXPLORE_ENABLED: true
        GF_DISABLE_SANITIZE_HTML: true
        GF_PANELS_DISABLE_SANITIZE_HTML: true
        GF_LOG_FILTERS: rendering:debug
      persistence:
        enabled: false
        existingClaim: nfs-monitoring-pvc
      dashboardProviders:
        dashboardproviders.yaml:
          apiVersion: 1
          providers:
            - name: 'default'
              orgId: 1
              folder: ''
              type: file
              disableDeletion: false
              allowUiUpdates: true
              options:
                path: /var/lib/grafana/dashboards/default
      plugins:
        - natel-discrete-panel
        - pr0ps-trackmap-panel
        - grafana-piechart-panel
        - grafana-clock-panel
        - vonage-status-panel
        - https://github.com/panodata/grafana-map-panel/releases/download/0.15.0/grafana-map-panel-0.15.0.zip;grafana-worldmap-panel-ng
      dashboards:
        default:
          1-node-exporter:
            url: https://grafana.com/api/dashboards/11074/revisions/9/download
            datasource: Prometheus
          cert-manager:
            url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/cert-manager/dashboards/cert-manager.json
            datasource: Prometheus
          pi-hole:
            url: https://raw.githubusercontent.com/eko/pihole-exporter/master/grafana/dashboard.json
            datasource: Prometheus
      sidecar:
        datasources:
          enabled: true
          searchNamespace: ALL
          # defaultDatasourceEnabled: false
        dashboards:
          enabled: true
          searchNamespace: ALL
    kubelet:
      enabled: true
      serviceMonitor:
        metricRelabelings:
          - action: replace
            sourceLabels:
              - node
            targetLabel: instance
    kubeApiServer:
      enabled: true
    kubeControllerManager:
      enabled: false
    kubeScheduler:
      enabled: false
    kubeProxy:
      enabled: false
    kubeEtcd:
      enabled: false
    prometheus:
      service:
        type: LoadBalancer
        loadBalancerIP: 192.168.128.167
      ingress:
        enabled: false
        pathType: Prefix
        hosts:
        - prometheus-operated.homelab
        annotations:
          kubernetes.io/ingress.class: "nginx"
      prometheusSpec:
        replicas: 1
        replicaExternalLabelName: "replica"
#        ruleSelector: {}
#        ruleNamespaceSelector: {}
#        ruleSelectorNilUsesHelmValues: false
#        serviceMonitorSelector: {}
#        serviceMonitorNamespaceSelector: {}
#        serviceMonitorSelectorNilUsesHelmValues: false
#        podMonitorSelector: {}
#        podMonitorNamespaceSelector: {}
#        podMonitorSelectorNilUsesHelmValues: false
        retention: 6h
        enableAdminAPI: true
        walCompression: true
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: nfs-client
              resources:
                requests:
                  storage: 10Gi
        additionalScrapeConfigs:
        - job_name: 'pihole'
          honor_labels: true
          static_configs:
            - targets:
                - pi-hole-pihole-dns-tcp.default.svc.cluster.local:9617
        - job_name: 'tetragon'
          honor_labels: true
          static_configs:
            - targets:
                - tetragon.kube-system.svc.cluster.local:2112
